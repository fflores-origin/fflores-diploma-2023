<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel5.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>